rm(list=ls())
setwd("C:/Users/rs/Desktop/Jaykumar")
pkgs <- c("data.table","dplyr","caTools","caret","rpart","rpart.plot","ROCR","ggplot2","gridExtra","Information")
sapply(pkgs,require,character.only=TRUE)

data <- read.csv('LoansTrainingSetV2.csv',na.strings = c("NA","#VALUE!"))
str(data)
data2 <- data
data2$Monthly.Debt <- as.numeric(gsub("\\$","",data$Monthly.Debt))
str(data2)
data2 <- data2[,-c(1,2)]
str(data2)
# missing values analysis
# percentage of complete data
sum(complete.cases(data2))/nrow(data)*100
# missing values percentage in each variable
sapply(data2,function(x) sum(is.na(x))/length(x)*100 )
str(data2)

data2 <- data.frame(sapply(data2,function(x) ifelse(is.na(x),mean(x, na.rm = TRUE),x)))

sapply(data2,function(x) sum(is.na(x))/length(x)*100 )

table(data2$Loan.Status)
data2$Loan.Status <- data2$Loan.Status-1


factcols <- c(1,3,5,6,8)
numcols <- setdiff(c(1:17),factcols)

data2[,factcols] <- lapply(data2[,factcols],factor)
data2[,numcols] <- lapply(data2[,numcols],as.numeric)
str(data2)

data_cat <- data2[,factcols]
data_num <- data2[,numcols]

hist_num <- function (x_label){
  ggplot(data = data2, aes(x=data2[,x_label],y=..density..))+
    geom_histogram(fill="blue",color="red") + geom_density() + xlab(label = x_label)
}

p1<-hist_num("Current.Loan.Amount");p2<-hist_num("Credit.Score");p3<-hist_num("Annual.Income");
p4<-hist_num("Years.of.Credit.History");p5<-hist_num("Months.since.last.delinquent");
p6<-hist_num("Number.of.Open.Accounts");p7<-hist_num("Number.of.Credit.Problems");
p8<-hist_num("Current.Credit.Balance");p9<-hist_num("Maximum.Open.Credit");
p10<-hist_num("Bankruptcies");p11<-hist_num("Tax.Liens");p12<-hist_num("Monthly.Debt")
grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,nrow=3)

# outlier_treat <- function(x){
#   quantiles <- quantile( x, c(.05, .95 ) )
#   x[ x < quantiles[1] ] <- quantiles[1]
#   x[ x > quantiles[2] ] <- quantiles[2]
#   x
# }
# data2[,numcols] <- sapply(data2[,numcols],function(x) outlier_treat(x))

# Correlation among numerical predictors
library(corrplot)
cor_mat <- cor(data_num)
corrplot(cor_mat,method = "circle")
# check VIF
library(usdm)
vif(data_num) 
# dropping variable with high VIF
data2$Number.of.Credit.Problems <- NULL
############## Modelling
# split the data in train and test
set.seed(100)
spl = sample.split(data2$Loan.Status,SplitRatio = 0.7)
train = data2[spl==TRUE,]
test = data2[spl==FALSE,]

log_model <- glm(Loan.Status~.,family = "binomial",data = train)
summary(log_model)

log_model <- glm(Loan.Status~.-Home.Ownership-Tax.Liens,family = "binomial",data = train)
summary(log_model)

# Evaluation on Test
log_fitted <- predict(log_model,newdata = test, type = "response")
# ROC Curve
ROCRpred <- prediction(log_fitted, test$Loan.Status)
ROCRperf <- performance(ROCRpred, 'tpr','fpr')
plot(ROCRperf)
# KS Statistic
ks=max(attr(ROCRperf,'y.values')[[1]]-attr(ROCRperf,'x.values')[[1]])
plot(ROCRperf,main=paste0(' KS=',round(ks*100,1),'%'))
lines(x = c(0,1),y=c(0,1))
print(ks);
# Area Under Curve
auc <- performance(ROCRpred, measure = "auc")
auc <- auc@y.values[[1]]
print(auc)

# Confusion Matrix
log_fitted_class <- ifelse(log_fitted>0.5,1,0)
log_cm <- caret::confusionMatrix(data=factor(log_fitted_class),reference = factor(test$Loan.Status))
log_cm$byClass;log_cm$overall

# overall accuracy is ~82% - which has a scope for further improvement by spending more effort on 
# feature engineering - outlier value analysis, bining of the numeric variable, combining categories
# using WOE

#### Decision Tree
# set seed
set.seed(111)
# cross validation
fitControl = trainControl(method = "cv", number = 10)
cartGrid=expand.grid(.cp=seq(0.01,0.5,0.05))
cv_train <- train(Loan.Status ~ ., data=train, method="rpart", trControl = fitControl, tuneGrid = cartGrid)

# build model with best tuned CP
CART_model = rpart(Loan.Status ~ ., data=train, cp=cv_train$bestTune)

# predict values of test set
CART_prediction <- predict(CART_model, newdata = test, type = "class")
#confusion matrix
CART_cm <- confusionMatrix(data=factor(CART_prediction),reference = test$Loan.Status)
CART_cm$byClass;CART_cm$overall
# plot the tree
rpart.plot(CART_model,extra = 1,type = 1,digits = -3);title("Credit Default")
